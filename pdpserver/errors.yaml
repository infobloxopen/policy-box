package: main

import:
  - fmt
  - strings
  - github.com/infobloxopen/themis/pdp-control

errors:
- id: externalError
  fields:
  - id: err
    type: error
  msg: "%s"
  args:
  - field: err

- id: multiError
  fields:
  - id: errs
    type: "[]error"
  msg: "multiple errors: %s"
  args:
  - snippet:
      result: msg
      code: |
        msgs := make([]string, len(e.errs))
        for i, err := range e.errs {
                msgs[i] = fmt.Sprintf("%q", err.Error())
        }
        msg := strings.Join(msgs, ", ")

- id: tracingTypeError
  fields:
  - id: t
    type: string
  msg: "Unknown tracing type %q"
  args:
  - field: t

- id: unknownEffectError
  fields:
  - id: effect
    type: int
  msg: "Unknown policy effect %d"
  args:
  - field: effect

- id: unknownAttributeTypeError
  fields:
  - id: t
    type: string
  msg: "Unknown attribute type %q"
  args:
  - field: t

- id: contextCreationError
  fields:
  - id: err
    type: error
  msg: "Failed to create request context: %s"
  args:
  - field: err

- id: policyCalculationError
  fields:
  - id: err
    type: error
  msg: "Failed to process request: %s"
  args:
  - field: err

- id: effectTranslationError
  fields:
  - id: err
    type: error
  msg: "Failed to translate effect: %s"
  args:
  - field: err

- id: effectCombiningError
  fields:
  - id: err
    type: error
  msg: "Failed to make failure effect: %s"
  args:
  - field: err

- id: obligationTranslationError
  fields:
  - id: err
    type: error
  msg: "Failed to translate obligations: %s"
  args:
  - field: err

- id: queueOverflowError
  fields:
  - id: idx
    type: int32
  msg: "Can't enqueue more than %d items"
  args:
  - field: idx

- id: unknownUploadRequestError
  fields:
  - id: t
    type: control.Item_DataType
  msg: "Unknown upload request type: %d"
  args:
  - field: t

- id: invalidFromTagError
  fields:
  - id: tag
    type: string
  - id: err
    type: error
  msg: "Can't treat %q as current tag: %s"
  args:
  - field: tag
  - field: err

- id: invalidToTagError
  fields:
  - id: tag
    type: string
  - id: err
    type: error
  msg: "Can't treat %q as new tag: %s"
  args:
  - field: tag
  - field: err

- id: invalidTagsError
  fields:
  - id: tag
    type: string
  msg: "Can't update from %q tag to no tag"
  args:
  - field: tag

- id: tagCheckError
  fields:
  - id: err
    type: error
  msg: "Failed tag check: %s"
  args:
  - field: err

- id: emptyUploadError
  msg: "Empty upload"

- id: unknownUploadError
  fields:
  - id: id
    type: int32
  msg: "Can't find upload request with id %d"
  args:
  - field: id

- id: policyUploadParseError
  fields:
  - id: id
    type: int32
  - id: err
    type: error
  msg: "Failed to parse policy %d: %s"
  args:
  - field: id
  - field: err

- id: contentUploadParseError
  fields:
  - id: id
    type: int32
  - id: err
    type: error
  msg: "Failed to parse content %d: %s"
  args:
  - field: id
  - field: err

- id: missingPolicyStorageError
  msg: "No any policy to update"

- id: policyTransactionInProgressError
  msg: "Can't start new policy update or completely reload policy while another update is in progress"

- id: policyTransactionCreationError
  fields:
  - id: id
    type: int32
  - id: item
    type: "*Item"
  - id: err
    type: error
  msg: "Can't create transaction for policy update %d from tag %q to %q: %s"
  args:
  - field: id
  - expr: e.item.fromTag.String()
  - expr: e.item.toTag.String()
  - field: err

- id: policyUpdateParseError
  fields:
  - id: id
    type: int32
  - id: item
    type: "*Item"
  - id: err
    type: error
  msg: "Failed to parse update %d from tag %q to %q: %s"
  args:
  - field: id
  - expr: e.item.fromTag.String()
  - expr: e.item.toTag.String()
  - field: err

- id: policyUpdateApplicationError
  fields:
  - id: id
    type: int32
  - id: item
    type: "*Item"
  - id: err
    type: error
  msg: "Failed to apply update %d from tag %q to %q: %s"
  args:
  - field: id
  - expr: e.item.fromTag.String()
  - expr: e.item.toTag.String()
  - field: err

- id: policyTransactionCommitError
  fields:
  - id: id
    type: int32
  - id: item
    type: "*Item"
  - id: err
    type: error
  msg: "Failed to commit transaction %d from tag %q to %q: %s"
  args:
  - field: id
  - expr: e.item.fromTag.String()
  - expr: e.item.toTag.String()
  - field: err

- id: contentTransactionInProgressError
  fields:
  - id: id
    type: string
  msg: "Can't start new content update or completely reload content %q while another update of the content is in progress"
  args:
  - field: id

- id: contentTransactionCreationError
  fields:
  - id: id
    type: int32
  - id: item
    type: "*Item"
  - id: err
    type: error
  msg: "Can't create transaction for content %q update %d from tag %q to %q: %s"
  args:
  - field: item.id
  - field: id
  - expr: e.item.fromTag.String()
  - expr: e.item.toTag.String()
  - field: err

- id: contentUpdateParseError
  fields:
  - id: id
    type: int32
  - id: item
    type: "*Item"
  - id: err
    type: error
  msg: "Failed to parse content %q update %d from tag %q to %q: %s"
  args:
  - field: item.id
  - field: id
  - expr: e.item.fromTag.String()
  - expr: e.item.toTag.String()
  - field: err

- id: contentUpdateApplicationError
  fields:
  - id: id
    type: int32
  - id: item
    type: "*Item"
  - id: err
    type: error
  msg: "Failed to apply content %q update %d from tag %q to %q: %s"
  args:
  - field: item.id
  - field: id
  - expr: e.item.fromTag.String()
  - expr: e.item.toTag.String()
  - field: err

- id: contentTransactionCommitError
  fields:
  - id: id
    type: int32
  - id: item
    type: "*Item"
  - id: err
    type: error
  msg: "Failed to commit content %q transaction %d from tag %q to %q: %s"
  args:
  - field: item.id
  - field: id
  - expr: e.item.fromTag.String()
  - expr: e.item.toTag.String()
  - field: err
