// Code generated by protoc-gen-go. DO NOT EDIT.
// source: info.proto

/*
Package info is a generated protocol buffer package.

It is generated from these files:
	info.proto

It has these top-level messages:
	Attribute
	Request
	Response
*/
package info

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Response_Status int32

const (
	Response_OK    Response_Status = 0
	Response_ERROR Response_Status = 1
)

var Response_Status_name = map[int32]string{
	0: "OK",
	1: "ERROR",
}
var Response_Status_value = map[string]int32{
	"OK":    0,
	"ERROR": 1,
}

func (x Response_Status) String() string {
	return proto.EnumName(Response_Status_name, int32(x))
}
func (Response_Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2, 0} }

type Attribute struct {
	Id    string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Type  string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Value string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *Attribute) Reset()                    { *m = Attribute{} }
func (m *Attribute) String() string            { return proto.CompactTextString(m) }
func (*Attribute) ProtoMessage()               {}
func (*Attribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Attribute) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Attribute) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Attribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Request struct {
	Query      string       `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
	Attributes []*Attribute `protobuf:"bytes,2,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Request) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *Request) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type Response struct {
	Status     Response_Status `protobuf:"varint,1,opt,name=status,enum=info.Response_Status" json:"status,omitempty"`
	Reason     string          `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
	Attributes []*Attribute    `protobuf:"bytes,3,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetStatus() Response_Status {
	if m != nil {
		return m.Status
	}
	return Response_OK
}

func (m *Response) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Response) GetAttributes() []*Attribute {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func init() {
	proto.RegisterType((*Attribute)(nil), "info.Attribute")
	proto.RegisterType((*Request)(nil), "info.Request")
	proto.RegisterType((*Response)(nil), "info.Response")
	proto.RegisterEnum("info.Response_Status", Response_Status_name, Response_Status_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PipService service

type PipServiceClient interface {
	GetRequestsStream(ctx context.Context, opts ...grpc.CallOption) (PipService_GetRequestsStreamClient, error)
}

type pipServiceClient struct {
	cc *grpc.ClientConn
}

func NewPipServiceClient(cc *grpc.ClientConn) PipServiceClient {
	return &pipServiceClient{cc}
}

func (c *pipServiceClient) GetRequestsStream(ctx context.Context, opts ...grpc.CallOption) (PipService_GetRequestsStreamClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_PipService_serviceDesc.Streams[0], c.cc, "/info.PipService/GetRequestsStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &pipServiceGetRequestsStreamClient{stream}
	return x, nil
}

type PipService_GetRequestsStreamClient interface {
	Send(*Response) error
	Recv() (*Request, error)
	grpc.ClientStream
}

type pipServiceGetRequestsStreamClient struct {
	grpc.ClientStream
}

func (x *pipServiceGetRequestsStreamClient) Send(m *Response) error {
	return x.ClientStream.SendMsg(m)
}

func (x *pipServiceGetRequestsStreamClient) Recv() (*Request, error) {
	m := new(Request)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for PipService service

type PipServiceServer interface {
	GetRequestsStream(PipService_GetRequestsStreamServer) error
}

func RegisterPipServiceServer(s *grpc.Server, srv PipServiceServer) {
	s.RegisterService(&_PipService_serviceDesc, srv)
}

func _PipService_GetRequestsStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PipServiceServer).GetRequestsStream(&pipServiceGetRequestsStreamServer{stream})
}

type PipService_GetRequestsStreamServer interface {
	Send(*Request) error
	Recv() (*Response, error)
	grpc.ServerStream
}

type pipServiceGetRequestsStreamServer struct {
	grpc.ServerStream
}

func (x *pipServiceGetRequestsStreamServer) Send(m *Request) error {
	return x.ServerStream.SendMsg(m)
}

func (x *pipServiceGetRequestsStreamServer) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _PipService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "info.PipService",
	HandlerType: (*PipServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetRequestsStream",
			Handler:       _PipService_GetRequestsStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "info.proto",
}

func init() { proto.RegisterFile("info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0xeb, 0xa4, 0x0d, 0xe4, 0x10, 0xa1, 0x9c, 0x00, 0x45, 0xb0, 0x54, 0x99, 0xb2, 0x10,
	0x50, 0x58, 0x58, 0x19, 0x0a, 0x03, 0x43, 0x2b, 0xe7, 0x09, 0x52, 0x7a, 0x48, 0x96, 0x20, 0x49,
	0xed, 0x73, 0xa5, 0x3e, 0x0d, 0xaf, 0x8a, 0xea, 0x38, 0x08, 0x58, 0xba, 0xdd, 0x7f, 0xf7, 0xfb,
	0xbf, 0x4f, 0x3e, 0x00, 0xd5, 0xbc, 0xb7, 0x45, 0xa7, 0x5b, 0x6e, 0x71, 0xbc, 0xaf, 0xb3, 0x39,
	0xc4, 0x4f, 0xcc, 0x5a, 0xad, 0x2c, 0x13, 0x26, 0x10, 0xa8, 0x75, 0x2a, 0x66, 0x22, 0x8f, 0x65,
	0xa0, 0xd6, 0x88, 0x30, 0xe6, 0x5d, 0x47, 0x69, 0xe0, 0x3a, 0xae, 0xc6, 0x0b, 0x98, 0x6c, 0xeb,
	0x0f, 0x4b, 0x69, 0xe8, 0x9a, 0xbd, 0xc8, 0x96, 0x70, 0x24, 0x69, 0x63, 0xc9, 0xf0, 0xde, 0xb0,
	0xb1, 0xa4, 0x77, 0x3e, 0xa7, 0x17, 0x78, 0x07, 0x50, 0x0f, 0x7b, 0x4c, 0x1a, 0xcc, 0xc2, 0xfc,
	0xa4, 0x3c, 0x2b, 0x1c, 0xce, 0xcf, 0x7e, 0xf9, 0xcb, 0x92, 0x7d, 0x09, 0x38, 0x96, 0x64, 0xba,
	0xb6, 0x31, 0x84, 0xb7, 0x10, 0x19, 0xae, 0xd9, 0x1a, 0x17, 0x9a, 0x94, 0x97, 0xfd, 0xcb, 0x61,
	0x5e, 0x54, 0x6e, 0x28, 0xbd, 0x09, 0xaf, 0x20, 0xd2, 0x54, 0x9b, 0xb6, 0xf1, 0xe4, 0x5e, 0xfd,
	0x83, 0x08, 0x0f, 0x43, 0xdc, 0x40, 0xd4, 0x47, 0x63, 0x04, 0xc1, 0xe2, 0x75, 0x3a, 0xc2, 0x18,
	0x26, 0x73, 0x29, 0x17, 0x72, 0x2a, 0xca, 0x67, 0x80, 0xa5, 0xea, 0x2a, 0xd2, 0x5b, 0xf5, 0x46,
	0xf8, 0x08, 0xe7, 0x2f, 0xc4, 0xfe, 0x13, 0x4c, 0xc5, 0x9a, 0xea, 0x4f, 0x4c, 0xfe, 0x72, 0x5e,
	0x9f, 0x0e, 0xda, 0xb9, 0xb2, 0x51, 0x2e, 0xee, 0xc5, 0x2a, 0x72, 0xf7, 0x78, 0xf8, 0x0e, 0x00,
	0x00, 0xff, 0xff, 0xb7, 0x32, 0x2e, 0xa2, 0x9d, 0x01, 0x00, 0x00,
}
